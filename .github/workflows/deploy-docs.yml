name: Deploy Docs

on:
  push:
    branches:
      - main
    paths:
      - packages/core/docs/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - shell: bash
        run: |
          echo "1.0.`date +%s`" > version.txt
      - name: Upload version artifact
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat version.txt)
      - name: Build and publish docker image
        # uses: elgohr/Publish-Docker-Github-Action@master
        # 3.04 is hardcoded as a workaround for https://github.com/elgohr/Publish-Docker-Github-Action/issues/134
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          name: docs-storefrontcloud-io/v2:${{ steps.get_version.outputs.VERSION }}
          registry: registry.storefrontcloud.io
          username: ${{ secrets.DOCS_CLOUD_USERNAME }}
          password: ${{ secrets.DOCS_CLOUD_PASSWORD }}
          workdir: .
          dockerfile: ./packages/core/docs/Dockerfile
          buildoptions: "--compress"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download version artifact
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat version.txt)
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: https://docs.europe-west1.gcp.storefrontcloud.io/v2
          environment: production
          initial_status: in_progress
      - name: Deploy on docs.europe-west1.gcp.storefrontcloud.io/v2
        run: |
          if curl -s -H 'X-User-Id: ${{ secrets.DOCS_CLOUD_USERNAME }}'  -H 'X-Api-Key: ${{ secrets.DOCS_CLOUD_PASSWORD }}' -H 'Content-Type: application/json' -X POST -d '{"code":"docs","region":"europe-west1.gcp","additionalApps":{"apps":[{"name":"docs-v2","tag":"${{ steps.get_version.outputs.VERSION }}","image":"registry.storefrontcloud.io/docs-storefrontcloud-io/v2","path":"/v2","port":"80"}]}}' https://farmer.storefrontcloud.io/instances | grep -q '{"code":200,"result":"Instance updated!"}'; then
            echo "Instance updated"
          else
            echo "Something went wrong during the update process..."
            exit 1
          fi
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://docs.europe-west1.gcp.storefrontcloud.io/v2
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://docs.europe-west1.gcp.storefrontcloud.io/v2
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
