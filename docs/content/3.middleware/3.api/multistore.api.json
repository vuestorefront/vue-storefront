{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.36.4",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@vue-storefront/multistore!",
  "docComment": "",
  "name": "@vue-storefront/multistore",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@vue-storefront/multistore!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@vue-storefront/multistore!CacheManager:interface",
          "docComment": "/**\n * Cache manager is responsible for caching configuration and retreiving configuration from cache.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CacheManager "
            }
          ],
          "fileUrlPath": "src/types.ts",
          "releaseTag": "Public",
          "name": "CacheManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@vue-storefront/multistore!CacheManager#get:member(1)",
              "docComment": "/**\n * Gets a store configuration from cache storage based on the `key` value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StoreConfig",
                  "canonicalReference": "@vue-storefront/multistore!StoreConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@vue-storefront/multistore!CacheManager#set:member(1)",
              "docComment": "/**\n * Sets a store configuration in the cache storage with identifier equals `key` value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Reference",
                  "text": "StoreConfig",
                  "canonicalReference": "@vue-storefront/multistore!StoreConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "set"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@vue-storefront/multistore!createMultistoreExtension:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createMultistoreExtension: "
            },
            {
              "kind": "Content",
              "text": "(multistoreConfig: "
            },
            {
              "kind": "Reference",
              "text": "MultistoreExtensionMethods",
              "canonicalReference": "@vue-storefront/multistore!MultistoreExtensionMethods:interface"
            },
            {
              "kind": "Content",
              "text": ") => {\n    name: string;\n    isNamespaced: false;\n    extendApp: () => void;\n    hooks: (req: import(\"express\")."
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "@types/express!e.Request:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"express-serve-static-core\")."
            },
            {
              "kind": "Reference",
              "text": "ParamsDictionary",
              "canonicalReference": "@types/express-serve-static-core!ParamsDictionary:interface"
            },
            {
              "kind": "Content",
              "text": ", any, any, import(\"qs\")."
            },
            {
              "kind": "Reference",
              "text": "ParsedQs",
              "canonicalReference": "@types/qs!QueryString.ParsedQs:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>>) => {\n        beforeCreate: ({ "
            },
            {
              "kind": "Reference",
              "text": "configuration",
              "canonicalReference": "@vue-storefront/middleware!HookParams#configuration"
            },
            {
              "kind": "Content",
              "text": ": baseConfig }: import(\"@vue-storefront/middleware\")."
            },
            {
              "kind": "Reference",
              "text": "HookParams",
              "canonicalReference": "@vue-storefront/middleware!HookParams:interface"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "StoreConfig",
              "canonicalReference": "@vue-storefront/multistore!StoreConfig:type"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n}"
            }
          ],
          "fileUrlPath": "src/extension.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "createMultistoreExtension",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@vue-storefront/multistore!FetchConfigWithCacheParams:interface",
          "docComment": "/**\n * Parameters for updateConfig utility function.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FetchConfigWithCacheParams "
            }
          ],
          "fileUrlPath": "src/types.ts",
          "releaseTag": "Public",
          "name": "FetchConfigWithCacheParams",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@vue-storefront/multistore!FetchConfigWithCacheParams#cacheManager:member",
              "docComment": "/**\n * Cache manager.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cacheManager: "
                },
                {
                  "kind": "Reference",
                  "text": "CacheManager",
                  "canonicalReference": "@vue-storefront/multistore!CacheManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cacheManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@vue-storefront/multistore!FetchConfigWithCacheParams#domain:member",
              "docComment": "/**\n * Domain of the request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domain: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "domain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@vue-storefront/multistore!FetchConfigWithCacheParams#multistore:member",
              "docComment": "/**\n * Extension methods defined in the middleware multistore configuration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multistore: "
                },
                {
                  "kind": "Reference",
                  "text": "MultistoreExtensionMethods",
                  "canonicalReference": "@vue-storefront/multistore!MultistoreExtensionMethods:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "multistore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@vue-storefront/multistore!MultistoreExtensionMethods:interface",
          "docComment": "/**\n * Extension methods defined in the middleware multistore configuration.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MultistoreExtensionMethods "
            }
          ],
          "fileUrlPath": "src/types.ts",
          "releaseTag": "Public",
          "name": "MultistoreExtensionMethods",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@vue-storefront/multistore!MultistoreExtensionMethods#cacheManagerFactory:member",
              "docComment": "/**\n * Cache manager factory creates cache manager.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cacheManagerFactory: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "CacheManager",
                  "canonicalReference": "@vue-storefront/multistore!CacheManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cacheManagerFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@vue-storefront/multistore!MultistoreExtensionMethods#fetchConfiguration:member",
              "docComment": "/**\n * Fetches configuration from external service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fetchConfiguration: "
                },
                {
                  "kind": "Content",
                  "text": "(params: {\n        domain: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "StoreConfig",
                  "canonicalReference": "@vue-storefront/multistore!StoreConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fetchConfiguration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@vue-storefront/multistore!MultistoreExtensionMethods#mergeConfigurations:member",
              "docComment": "/**\n * Overwrites base configuration with store configuration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mergeConfigurations: "
                },
                {
                  "kind": "Content",
                  "text": "(params: {\n        baseConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "StoreConfig",
                  "canonicalReference": "@vue-storefront/multistore!StoreConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        storeConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "StoreConfig",
                  "canonicalReference": "@vue-storefront/multistore!StoreConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "StoreConfig",
                  "canonicalReference": "@vue-storefront/multistore!StoreConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mergeConfigurations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@vue-storefront/multistore!StoreConfig:type",
          "docComment": "/**\n * Type alias for any store configuration.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type StoreConfig = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/types.ts",
          "releaseTag": "Public",
          "name": "StoreConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        }
      ]
    }
  ]
}
